name: Test Api

on: 
  push:
    branches:
      - 'tests/**'
    paths:
      - 'GR.Laromedel.AccessPortal.Api/**'
      - 'GR.Laromedel.AccessPortal.Business/**'
      - 'GR.Laromedel.AccessPortal.Services/**'

env:
    PACKAGE_PREFIX: 2021.1.1
    OCTOPUS_PROJECT_NAME: AccessPortal
    OCTOPUS_SPACE_NAME: Default
    OCTOPUS_ENVIRONMENT_NAME: LÃ¤romedel PP Test
    ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Set version
      id: set-version
      run: echo "::set-env name=PACKAGE_VERSION::${env:PACKAGE_PREFIX}.${env:GITHUB_RUN_NUMBER}-api"
      shell: powershell
    
    - name: Make package directories
      run: New-Item "$PSScriptRoot\packagesoutput\" -ItemType Directory -Force
      shell: powershell
    
    - name: Install Octopus CLI
      run: choco install octopustools -y
      shell: powershell
      
    - name: Build and Package Website
      run: dotnet publish ./GR.Laromedel.AccessPortal.Api/GR.Laromedel.AccessPortal.Api.csproj --output "$PSScriptRoot\packagesoutput\GR.Laromedel.AccessPortal.Api" --configuration Release
      shell: powershell

    - name: Package and Push to Octopus
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_APIKEY }}  
      run: |
        octo pack --id="GR.Laromedel.AccessPortal.Api" --format="Zip" --version="${env:PACKAGE_VERSION}" --basePath="$PSScriptRoot\packagesoutput\GR.Laromedel.AccessPortal.Api" --outFolder="packages"

        octo push --package="packages\GR.Laromedel.AccessPortal.Api.${env:PACKAGE_VERSION}.zip" --server="${env:OCTOPUS_URL}" --apiKey="${env:OCTOPUS_API_KEY}"

    - name: Create and Deploy Release
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_APIKEY }} 
      run: octo create-release --project="AccessPortal" --package="GR.Laromedel.AccessPortal.Api:{env:PACKAGE_VERSION}" --releaseNumber="${env:PACKAGE_VERSION}" --server="${env:OCTOPUS_URL}" --apiKey="${env:OCTOPUS_API_KEY}" --space="${env:OCTOPUS_SPACE_NAME}" --deployTo="${env:OCTOPUS_ENVIRONMENT_NAME}"
